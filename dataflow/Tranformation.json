{
	"name": "Tranformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DimDate",
						"type": "DatasetReference"
					},
					"name": "DimDate"
				},
				{
					"dataset": {
						"referenceName": "WeatherMetrics",
						"type": "DatasetReference"
					},
					"name": "WeatherMetrics"
				},
				{
					"dataset": {
						"referenceName": "DimRegion",
						"type": "DatasetReference"
					},
					"name": "DimRegion"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sefdinenassufAzureSynapseAnalyticsTable",
						"type": "DatasetReference"
					},
					"name": "DimDateCleaned"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTableRegion",
						"type": "DatasetReference"
					},
					"name": "WeatherMetricsCleaned"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable1",
						"type": "DatasetReference"
					},
					"name": "DimRegionLoad"
				}
			],
			"transformations": [
				{
					"name": "Changedatetype"
				},
				{
					"name": "DateHierarchy"
				},
				{
					"name": "GenerateID"
				},
				{
					"name": "ChangeType"
				}
			],
			"scriptLines": [
				"source(output(",
				"          DateID as string,",
				"          Date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimDate",
				"source(output(",
				"          DateID as string,",
				"          RegionID as string,",
				"          AverageTemperature as string,",
				"          Humidity as string,",
				"          WindSpeed as string,",
				"          Rainfall as string,",
				"          SunshineHours as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> WeatherMetrics",
				"source(output(",
				"          RegionID as string,",
				"          RegionName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimRegion",
				"DimDate cast(output(",
				"          DateID as integer,",
				"          Date as date 'yyyy-MM-dd'",
				"     ),",
				"     errors: true) ~> Changedatetype",
				"Changedatetype derive(Year = year(Date),",
				"          Month = month(Date),",
				"          Day = dayOfMonth(Date)) ~> DateHierarchy",
				"WeatherMetrics keyGenerate(output(ID as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> GenerateID",
				"DimRegion cast(output(",
				"          RegionID as integer,",
				"          RegionName as string",
				"     ),",
				"     errors: true) ~> ChangeType",
				"DateHierarchy sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DateID as integer,",
				"          Date as date,",
				"          Year as integer,",
				"          Month as integer,",
				"          Day as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DimDateCleaned",
				"GenerateID sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          RegionID as integer,",
				"          RegionName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> WeatherMetricsCleaned",
				"ChangeType sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as integer,",
				"          DateID as integer,",
				"          RegoinID as integer,",
				"          AverageTemperature as integer,",
				"          Humidity as integer,",
				"          WindSpeed as integer,",
				"          Rainfall as integer,",
				"          SunchineHours as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DimRegionLoad"
			]
		}
	}
}